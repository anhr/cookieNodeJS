/**
 * node.js version of the cookie.
 * Cookies let you store user information in web pages.
 *
 * @author Andrej Hristoliubov https://anhr.github.io/AboutMe/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(o.cookie={})}(this,function(o){"use strict";function i(){return navigator.cookieEnabled}function t(o,e,t){i()?(e=e.toString(),void 0===t&&(t=new Date).setTime(t.getTime()+31536e6),document.cookie=o+"="+e+("undefined"==typeof settings?"":settings)+"; expires="+t.toGMTString(),""===document.cookie&&console.error("document.cookie is empty")):n()}function n(){console.error("navigator.cookieEnabled = "+navigator.cookieEnabled)}function c(o){this.get=function(o){return o},this.set=function(){},this.getObject=function(o,i,e){if(e){void 0===i.optionsDefault&&(i.optionsDefault=e),void 0===i.cookieObject&&(i.cookieObject=i.cookie),i.cookieObject.options=i;var n=e;Object.keys(i.optionsDefault).forEach(function(t){void 0!==n[t]&&("object"==typeof i.optionsDefault[t]?Object.keys(i.optionsDefault[t]).forEach(function(e){void 0===i[t]&&(i[t]=n[t]),void 0!==n[t][e]&&("object"==typeof n[t][e]?Object.keys(n[t][e]).forEach(function(o){void 0===i[t][e]&&(i[t][e]=n[t][e]),void 0!==n[t][e][o]&&(i[t][e][o]=n[t][e][o])}):(i[t][e]=n[t][e],void 0!==i.commonOptions&&(i.commonOptions[t][e]=n[t][e])))}):(i[t]=n[t],void 0!==i.commonOptions&&(i.commonOptions[t]=n[t])))})}},this.setObject=function(){},this.isTrue=function(o){return o}}o.isEnabled=i,o.set=t,o.setObject=function(o,e){t(o,JSON.stringify(e))},o.get=function(o,e){if(i()){var t=document.cookie.match("(^|;) ?"+o+"=([^;]*)(;|$)");return t?unescape(t[2]):void 0===e?"":e}n()},o.getObject=function(o,e,t){void 0===e.optionsDefault&&(e.optionsDefault=t),(new c).getObject(o,e,JSON.parse(e.cookie.get(o,JSON.stringify(t))))},o.remove=function(o){if(i()){var e=new Date;e.setTime(e.getTime()-1),document.cookie=o+="=; expires="+e.toGMTString()}else n()},o.defaultCookie=c,Object.defineProperty(o,"__esModule",{value:!0})});
